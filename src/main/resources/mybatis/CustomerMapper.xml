<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="current_address" jdbcType="VARCHAR" property="currentAddress" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="work_unit" jdbcType="VARCHAR" property="workUnit" />
    <result column="business_address" jdbcType="VARCHAR" property="businessAddress" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="creater_serial" jdbcType="VARCHAR" property="createrSerial" />
  </resultMap>
  <sql id="Base_Column_List">
    id, serial, created_at, updated_at, deleted_at, status, name, idcard, phone, address, 
    current_address, nation, work_unit, business_address, sex, creater_serial
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Customer">
    insert into customer (id, serial, created_at, 
      updated_at, deleted_at, status, 
      name, idcard, phone, 
      address, current_address, nation, 
      work_unit, business_address, sex, 
      creater_serial)
    values (#{id,jdbcType=INTEGER}, #{serial,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{currentAddress,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{workUnit,jdbcType=VARCHAR}, #{businessAddress,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{createrSerial,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serial != null">
        serial,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="currentAddress != null">
        current_address,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="businessAddress != null">
        business_address,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createrSerial != null">
        creater_serial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serial != null">
        #{serial,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="businessAddress != null">
        #{businessAddress,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createrSerial != null">
        #{createrSerial,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Customer">
    update customer
    <set>
      <if test="serial != null">
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        current_address = #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        work_unit = #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="businessAddress != null">
        business_address = #{businessAddress,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createrSerial != null">
        creater_serial = #{createrSerial,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Customer">
    update customer
    set serial = #{serial,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      current_address = #{currentAddress,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      work_unit = #{workUnit,jdbcType=VARCHAR},
      business_address = #{businessAddress,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      creater_serial = #{createrSerial,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="current_address" jdbcType="VARCHAR" property="currentAddress" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="work_unit" jdbcType="VARCHAR" property="workUnit" />
    <result column="business_address" jdbcType="VARCHAR" property="businessAddress" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="creater_serial" jdbcType="VARCHAR" property="createrSerial" />
  </resultMap>
  <sql id="Base_Column_List">
    id, serial, created_at, updated_at, deleted_at, status, name, idcard, phone, address, 
    current_address, nation, work_unit, business_address, sex, creater_serial
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Customer">
    insert into customer (id, serial, created_at, 
      updated_at, deleted_at, status, 
      name, idcard, phone, 
      address, current_address, nation, 
      work_unit, business_address, sex, 
      creater_serial)
    values (#{id,jdbcType=INTEGER}, #{serial,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{currentAddress,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{workUnit,jdbcType=VARCHAR}, #{businessAddress,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{createrSerial,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serial != null">
        serial,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="currentAddress != null">
        current_address,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="businessAddress != null">
        business_address,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createrSerial != null">
        creater_serial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serial != null">
        #{serial,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="businessAddress != null">
        #{businessAddress,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createrSerial != null">
        #{createrSerial,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Customer">
    update customer
    <set>
      <if test="serial != null">
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        current_address = #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="workUnit != null">
        work_unit = #{workUnit,jdbcType=VARCHAR},
      </if>
      <if test="businessAddress != null">
        business_address = #{businessAddress,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createrSerial != null">
        creater_serial = #{createrSerial,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Customer">
    update customer
    set serial = #{serial,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      current_address = #{currentAddress,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      work_unit = #{workUnit,jdbcType=VARCHAR},
      business_address = #{businessAddress,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      creater_serial = #{createrSerial,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>